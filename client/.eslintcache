[{"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\index.js":"1","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\App.js":"2","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\store.js":"3","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\Login.js":"4","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\layout\\menus\\Navigation.js":"5","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\layout\\menus\\ListItems.js":"6","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\layout\\dashboard\\Dashboard.js":"7","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\calendar\\Calendar.js":"8","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\auth\\auth-helper.js":"9","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\auth\\PrivateRoute.js":"10","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\auth\\api-auth.js":"11","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\jobs\\Jobs.js":"12","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\jobs\\CreateJob.js":"13","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\jobs\\CompleteJob.js":"14","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\customers\\CreateCustomer.js":"15","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\employees\\Employees.js":"16","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\customers\\Customers.js":"17","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\purchasing\\Purchasing.js":"18","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\reducers\\index.js":"19","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\Search.js":"20","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\api-get.js":"21","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\layout\\PageHeader.js":"22","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\layout\\Alert.js":"23","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\hooks\\useGetRequest.js":"24","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\reducers\\alert.js":"25","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\FormButton.js":"26","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\api-post.js":"27","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\api-employee.js":"28","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\actions\\alert.js":"29","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\actions\\types.js":"30","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\DataTable.js":"31"},{"size":207,"mtime":1612029298026,"results":"32","hashOfConfig":"33"},{"size":678,"mtime":1612029298012,"results":"34","hashOfConfig":"33"},{"size":399,"mtime":1611530929217,"results":"35","hashOfConfig":"33"},{"size":3770,"mtime":1612144668487,"results":"36","hashOfConfig":"33"},{"size":5049,"mtime":1612820459394,"results":"37","hashOfConfig":"33"},{"size":1952,"mtime":1612144668494,"results":"38","hashOfConfig":"33"},{"size":158,"mtime":1612144668493,"results":"39","hashOfConfig":"33"},{"size":102,"mtime":1611441008303,"results":"40","hashOfConfig":"33"},{"size":605,"mtime":1611448013870,"results":"41","hashOfConfig":"33"},{"size":482,"mtime":1612029298014,"results":"42","hashOfConfig":"33"},{"size":1145,"mtime":1611448013864,"results":"43","hashOfConfig":"33"},{"size":971,"mtime":1612704990924,"results":"44","hashOfConfig":"33"},{"size":9603,"mtime":1612715561414,"results":"45","hashOfConfig":"33"},{"size":1729,"mtime":1612953076913,"results":"46","hashOfConfig":"33"},{"size":6322,"mtime":1612706931878,"results":"47","hashOfConfig":"33"},{"size":718,"mtime":1612734646475,"results":"48","hashOfConfig":"33"},{"size":594,"mtime":1612707061302,"results":"49","hashOfConfig":"33"},{"size":106,"mtime":1612029298051,"results":"50","hashOfConfig":"33"},{"size":123,"mtime":1611531109416,"results":"51","hashOfConfig":"33"},{"size":2182,"mtime":1612707466424,"results":"52","hashOfConfig":"33"},{"size":952,"mtime":1612953076913,"results":"53","hashOfConfig":"33"},{"size":558,"mtime":1612633518538,"results":"54","hashOfConfig":"33"},{"size":556,"mtime":1612144668492,"results":"55","hashOfConfig":"33"},{"size":1088,"mtime":1612823943151,"results":"56","hashOfConfig":"33"},{"size":394,"mtime":1611531668692,"results":"57","hashOfConfig":"33"},{"size":214,"mtime":1612144677292,"results":"58","hashOfConfig":"33"},{"size":401,"mtime":1612706560100,"results":"59","hashOfConfig":"33"},{"size":2070,"mtime":1611448747982,"results":"60","hashOfConfig":"33"},{"size":395,"mtime":1611535307482,"results":"61","hashOfConfig":"33"},{"size":84,"mtime":1611531362265,"results":"62","hashOfConfig":"33"},{"size":3008,"mtime":1612703292581,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"oc7iyn",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\index.js",[],["133","134"],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\App.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\store.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\Login.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\layout\\menus\\Navigation.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\layout\\menus\\ListItems.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\layout\\dashboard\\Dashboard.js",["135"],"import React from 'react';\r\nimport Search from '../../Search';\r\n\r\nconst Dashboard = () => {\r\n  return <div>Dashboard</div>;\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\calendar\\Calendar.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\auth\\auth-helper.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\auth\\PrivateRoute.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\auth\\api-auth.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\jobs\\Jobs.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\jobs\\CreateJob.js",["136"],"import React, { useState, useEffect } from 'react';\r\nimport { listAssets } from '../../../api/api-get';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { createAsset } from '../../../api/api-post';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../../actions/alert';\r\nimport Alert from '../../layout/Alert';\r\n\r\nimport {\r\n  Checkbox,\r\n  Container,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport FormButton from '../../FormButton';\r\n\r\nimport useGetRequest from '../../hooks/useGetRequest';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: '1rem',\r\n  },\r\n  formControl: {\r\n    '& .MuiFormControl-root': {\r\n      width: '80%',\r\n      margin: '.5rem',\r\n    },\r\n  },\r\n  title: {\r\n    padding: '1rem',\r\n  },\r\n  formContainer: {\r\n    padding: '3rem',\r\n  },\r\n  formButton: {\r\n    margin: '.5rem',\r\n  },\r\n  formElement: {\r\n    '& .MuiFormControl-root': {\r\n      margin: '1rem',\r\n      width: '90%',\r\n    },\r\n    '& .MuiGrid-container': {\r\n      padding: '1rem',\r\n    },\r\n  },\r\n});\r\n\r\nfunction CreateJob({ setAlert }) {\r\n  const { title, root, formElement } = useStyles();\r\n\r\n  const initialLocation = {\r\n    street: '',\r\n    city: '',\r\n    state: 'GA',\r\n    zipcode: '',\r\n    lotNumber: '',\r\n    subdivision: '',\r\n  };\r\n\r\n  const initialFieldData = {\r\n    jobName: '',\r\n    customer: '',\r\n    notes: '',\r\n  };\r\n\r\n  const [location, setLocation] = useState(initialLocation);\r\n\r\n  const [inputFieldData, setInputFieldData] = useState(initialFieldData);\r\n  const [jobType, setJobType] = useState('Flat');\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [selectedTime, setSelectedTime] = useState(new Date());\r\n  const [keepUnscheduled, setKeepUnscheduled] = useState(false);\r\n\r\n  const { jobName, customer } = inputFieldData;\r\n  const currentYear = new Date().getFullYear();\r\n  const { data: customers } = useGetRequest(listAssets, '/customers');\r\n\r\n  useEffect(() => {\r\n    setInputFieldData({\r\n      ...inputFieldData,\r\n      jobName: `jb/${\r\n        location.subdivision &&\r\n        location.subdivision\r\n          .split(/\\s/)\r\n          .reduce((response, word) => (response += word.slice(0, 3)), '')\r\n      }-${location.lotNumber || '00'}/${currentYear}`,\r\n    });\r\n  }, [location.subdivision, location.lotNumber]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const job = {\r\n      customer: inputFieldData.customer,\r\n      jobName: inputFieldData.jobName,\r\n      jobType,\r\n      payType: () => {\r\n        if (jobType === 'Flat') {\r\n          return 'Daily';\r\n        } else {\r\n          return 'Hourly';\r\n        }\r\n      },\r\n      scheduledDate: !keepUnscheduled ? selectedDate : '',\r\n      scheduledTime: !keepUnscheduled ? selectedTime : '',\r\n      location: {\r\n        street: location.street,\r\n        city: location.city,\r\n        state: location.state,\r\n        zipcode: location.zipcode,\r\n        lotNumber: location.lotNumber,\r\n        subdivision: location.subdivision,\r\n      },\r\n      status: !keepUnscheduled ? 'Scheduled' : 'Unscheduled',\r\n    };\r\n\r\n    createAsset(job, '/jobs').then((res) => {\r\n      if (!res.error) {\r\n        setLocation(initialLocation);\r\n        setInputFieldData(initialFieldData);\r\n        setJobType('Flat');\r\n        setSelectedDate(new Date());\r\n        setSelectedTime(new Date());\r\n        setAlert(res.message);\r\n      } else {\r\n        setAlert(res.error);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (name) => (e) => {\r\n    if (name === 'jobType') {\r\n      setJobType(e.target.value);\r\n    } else {\r\n      setInputFieldData({ ...inputFieldData, [name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleCustomer = (e) => {\r\n    setInputFieldData({ ...inputFieldData, customer: e.target.value });\r\n  };\r\n\r\n  const handleLocation = (name) => (e) => {\r\n    setLocation({ ...location, [name]: e.target.value });\r\n  };\r\n\r\n  function camelCaseToTextCase(str) {\r\n    const result = str.replace(/([A-Z])/g, ' $1');\r\n    const spliceBack = result.charAt(0).toUpperCase() + result.slice(1);\r\n\r\n    return spliceBack;\r\n  }\r\n\r\n  return (\r\n    <Paper className={root} style={{ overflow: 'none' }}>\r\n      <Typography variant='h6' className={title}>\r\n        Create New Job\r\n      </Typography>\r\n      <form onSubmit={(e) => onSubmit(e)} className={formElement}>\r\n        <Container>\r\n          <Grid container>\r\n            {Object.keys(location).map((field) => {\r\n              return (\r\n                <Grid item xs={12} sm={6} md={4} key={field}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    label={camelCaseToTextCase(field)}\r\n                    value={location[field]}\r\n                    size='small'\r\n                    onChange={handleLocation(field)}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <FormControl component='fieldset'>\r\n            <FormLabel component='legend'>Job Info</FormLabel>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  variant='outlined'\r\n                  label='Job Name'\r\n                  value={jobName}\r\n                  size='small'\r\n                  onChange={handleChange('jobName')}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <FormControl variant='outlined'>\r\n                  <InputLabel id='customer-name'>Customer Name</InputLabel>\r\n                  <Select\r\n                    labelId='customer-label'\r\n                    id='customer-select'\r\n                    value={customer}\r\n                    onChange={handleCustomer}\r\n                    style={{ height: '2.4rem' }}\r\n                  >\r\n                    {customers &&\r\n                      customers.map((person) => (\r\n                        <MenuItem value={person._id}>\r\n                          {person.firstName + ' ' + person.lastName}\r\n                        </MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </FormControl>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={keepUnscheduled}\r\n                    onChange={(e) => setKeepUnscheduled(!keepUnscheduled)}\r\n                  />\r\n                }\r\n                label='Leave Unscheduled'\r\n              />\r\n            </Grid>\r\n            {!keepUnscheduled && (\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid item xs={4}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant='inline'\r\n                    format='MM/dd/yyy'\r\n                    margin='normal'\r\n                    id='date-picker'\r\n                    label='Scheduled Date'\r\n                    value={selectedDate}\r\n                    onChange={setSelectedDate}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <KeyboardTimePicker\r\n                    margin='normal'\r\n                    id='time-picker'\r\n                    label='Scheduled Time'\r\n                    value={selectedTime}\r\n                    onChange={setSelectedTime}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change time',\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </MuiPickersUtilsProvider>\r\n            )}\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <FormControl component='fieldset'>\r\n                <FormLabel component='legend'>Job Type</FormLabel>\r\n                <RadioGroup\r\n                  aria-label='job-type'\r\n                  name='type1'\r\n                  value={jobType}\r\n                  onChange={handleChange('jobType')}\r\n                >\r\n                  <Grid container>\r\n                    <Grid item xs={12} sm={4} md={3} lg={2}>\r\n                      <FormControlLabel\r\n                        value='Flat'\r\n                        control={<Radio />}\r\n                        label='Flat'\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={3} lg={2}>\r\n                      <FormControlLabel\r\n                        value='Wall'\r\n                        control={<Radio />}\r\n                        label='Wall'\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={3} lg={2}>\r\n                      <FormControlLabel\r\n                        value='Other'\r\n                        control={<Radio />}\r\n                        label='Other'\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </RadioGroup>\r\n              </FormControl>\r\n              <Alert />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <FormButton text='Submit' />\r\n        </Container>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default connect(null, { setAlert })(CreateJob);\r\n","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\jobs\\CompleteJob.js",["137"],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\customers\\CreateCustomer.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\employees\\Employees.js",["138"],"import React from 'react';\r\nimport { listAssets, searchAssets } from '../../../api/api-get';\r\nimport useGetRequest from '../../hooks/useGetRequest';\r\nimport PageHeader from '../../layout/PageHeader';\r\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\r\nimport Search from '../../Search';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nfunction Employees() {\r\n  const { data: employees } = useGetRequest(listAssets, '/employees');\r\n\r\n  return (\r\n    <Grid container>\r\n      <PageHeader\r\n        title='Employees'\r\n        headerIcon={<AccessibilityNewIcon />}\r\n        path='/create'\r\n      />\r\n      <Search data={employees} from='emoployees' />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Employees;\r\n","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\customers\\Customers.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\categories\\purchasing\\Purchasing.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\reducers\\index.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\Search.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\api-get.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\layout\\PageHeader.js",["139"],"import React, { Fragment } from 'react';\r\nimport { IconButton, Typography, Grid } from '@material-ui/core';\r\n\r\nexport default function PageHeader({ headerIcon, title, path }) {\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      <Grid container alignItems='center'>\r\n        <Grid item>\r\n          <Typography variant='h5'>{title}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton href={path && `${title.toLowerCase()}${path}`}>\r\n            {headerIcon}\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\hooks\\useGetRequest.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\reducers\\alert.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\FormButton.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\api-post.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\api\\api-employee.js",[],["140","141"],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\actions\\alert.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\actions\\types.js",[],"C:\\Users\\keena\\Documents\\CC-Organizer\\client\\src\\components\\DataTable.js",["142","143"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function DataTable({ data, from }) {\r\n  const classes = useStyles();\r\n  const columns = data[0] && Object.keys(data[0]);\r\n\r\n  function camelCaseToTextCase(str) {\r\n    const result = str.replace(/([A-Z])/g, ' $1');\r\n    const spliceBack = result.charAt(0).toUpperCase() + result.slice(1);\r\n\r\n    return spliceBack;\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label='Data Table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Actions</TableCell>\r\n              {columns &&\r\n                columns.map((heading) => {\r\n                  if (heading !== '_id') {\r\n                    return (\r\n                      <TableCell key={heading}>\r\n                        {camelCaseToTextCase(heading)}\r\n                      </TableCell>\r\n                    );\r\n                  }\r\n                })}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell>\r\n                  <Grid container direction='row'>\r\n                    {from && from === 'jobs' && (\r\n                      <Grid item>\r\n                        <IconButton>\r\n                          <AssignmentTurnedInIcon\r\n                            fontSize='small'\r\n                            color='action'\r\n                          />\r\n                        </IconButton>\r\n                      </Grid>\r\n                    )}\r\n                    <Grid item>\r\n                      <IconButton>\r\n                        <DeleteIcon color='error' fontSize='small' />\r\n                      </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <IconButton href={`jobs/complete/${row._id}`}>\r\n                        <EditIcon color='primary' fontSize='small' />\r\n                      </IconButton>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TableCell>\r\n                {columns.map((column, ind) => {\r\n                  if (!row[column]) {\r\n                    return <TableCell key={ind}>N/A</TableCell>;\r\n                  } else if (row[column] !== row._id) {\r\n                    return <TableCell key={ind}>{row[column]}</TableCell>;\r\n                  }\r\n                })}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Grid>\r\n  );\r\n}\r\n",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":106,"column":6,"nodeType":"154","endLine":106,"endColumn":48,"suggestions":"155"},{"ruleId":"148","severity":1,"message":"156","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"157","line":2,"column":22,"nodeType":"150","messageId":"151","endLine":2,"endColumn":34},{"ruleId":"148","severity":1,"message":"158","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"144","replacedBy":"159"},{"ruleId":"146","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":43,"column":39,"nodeType":"163","messageId":"164","endLine":43,"endColumn":41},{"ruleId":"161","severity":1,"message":"162","line":81,"column":44,"nodeType":"163","messageId":"164","endLine":81,"endColumn":46},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentYear' and 'inputFieldData'. Either include them or remove the dependency array. You can also do a functional update 'setInputFieldData(i => ...)' if you only need 'inputFieldData' in the 'setInputFieldData' call.","ArrayExpression",["167"],"'useEffect' is defined but never used.","'searchAssets' is defined but never used.","'Fragment' is defined but never used.",["165"],["166"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},"Update the dependencies array to be: [location.subdivision, location.lotNumber, inputFieldData, currentYear]",{"range":"170","text":"171"},[2534,2576],"[location.subdivision, location.lotNumber, inputFieldData, currentYear]"]